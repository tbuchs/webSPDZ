from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split
from Compiler import ml

program.use_edabit(True)

start_timer(1)
start_timer(2)

# Load the dataset
X, y = load_breast_cancer(return_X_y=True)
# normalize column-wise
X /= X.max(axis=0)
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)

batch_size = 64
# dimensionality of breast cancer dataset is 30
n_vars = 30

data = sfix.Matrix(batch_size, n_vars)
sgd = ml.SGDLogistic(20, batch_size, program)
sgd.init(data)

start = 0
# Load the model
for var in sgd.opt.trainable_variables:
    var.input_from(0, binary=2)

# Prepare test data
X_test = sfix.input_tensor_via(1, X_test)
y_test = sint.input_tensor_via(1, y_test)

stop_timer(2)
start_timer(3)

# evaluate test data
res = sgd.opt.eval(X_test, batch_size)

print_ln('%s', res.reveal())
print_ln('%s', y_test.get_vector().reveal())

stop_timer(3)

# sanity check
correct, loss = sgd.opt.reveal_correctness(X_test, y_test, batch_size, running=False)
print_ln('Secure accuracy: %s/%s', correct, len(y_test))

stop_timer(1)